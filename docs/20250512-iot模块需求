1.  经过考虑，我们决定进行需求变更，当前阶段不接入kafka,因此，我们的数据流向产生了变化。
2.  数据流向：设备状态等信息->mqtt5.8.6开源版集群->goodsop-iot模块内消费信息->保存到数据库。
3.  设备认证（暂定）：采用http方式，username=设备ID,pwd=MD5(设备ID+YYYYMMDDHHmm),认证通过则允许设备建立连接。
4.  MQTT Topic设计方案为：/dev/AAA11/832/master/0000FFFF/base
即采用以下格式：
```
/{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/{endpoint}
```

其中各部分含义为：
- `{env}` - 环境标识（dev, test, prod）
- `{tenantId}` - B端客户租户ID
- `{deviceModel}` - 设备型号（如832）
- `{branch}` - 固件分支（master为主分支）
- `{deviceId}` - 设备唯一标识符
- `{endpoint}` - 终端类别（base-设备端，app-应用端）


    1. 设备状态上报Topic格式：
   ```
   /{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/status
   ```

    2. 设备事件上报Topic格式：
   ```
   /{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/event
   ```

    3. 设备命令下发Topic格式（设备订阅）：
   ```
   /{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/command
   ```

    4. 设备命令响应Topic格式（设备发布）：
   ```
   /{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/command/response
   ```

    5. APP命令下发Topic格式（APP订阅）：
   ```
   /{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/app/command
   ```

    6. 系统广播Topic格式（所有设备订阅）：
   ```
   /{env}/{tenantId}/{deviceModel}/broadcast
   ```

**订阅规则：**
- 设备订阅：`/{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/#`
- APP订阅：`/{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/app/#` 和 `/{env}/{tenantId}/{deviceModel}/{branch}/{deviceId}/base/status`
- 服务器订阅：
     - 状态监控服务：订阅 `/{env}/+/+/+/+/base/status`
     - 事件处理服务：订阅 `/{env}/+/+/+/+/base/event`
     - 命令响应服务：订阅 `/{env}/+/+/+/+/base/command/response`

5.  补充说明：
    有通知设备固件更新功能
    
### 1.1 设备基本状态信息
音频采集设备需要上报的状态信息包括但不限于以下内容：

| 字段名 | 类型 | 说明 | 示例值 |
|-------|------|------|--------|
| deviceId | String | 设备唯一标识符 | "GSDEV12345678" |
| firmwareVersion | String | 当前固件版本 | "v1.2.3" |
| batteryLevel | Integer | 电池电量百分比 | 85 |
| signalStrength | Integer | 信号强度（0-100） | 75 |
| recordingStatus | Integer | 录音状态（0-待机，1-录音中，2-暂停，3-故障） | 1 |
| storageUsage | Integer | 存储空间使用百分比 | 45 |
| errorCode | Integer | 错误代码（0表示正常） | 0 |
| timestamp | Long | 服务器接收状态时间戳（毫秒） | 1673856245000 |
| deviceTime | Long | 设备本机时间戳（毫秒） | 1673856240000 |
| networkType | String | 网络连接类型 | "4G/WIFI" |
| uploadQueue | Integer | 待上传文件数量 | 5 |
| temperature | Float | 设备温度（摄氏度） | 37.5 |

### 1.2 设备事件信息
设备还需要上报关键事件信息，主要包括：

| 事件类型 | 说明 | 附带信息 |
|---------|------|----------|
| POWER_ON | 设备开机 | 启动时间、电池电量 |
| POWER_OFF | 设备关机 | 关机方式（正常/异常）、电池电量 |
| RECORDING_START | 开始录音 | 文件标识、起始时间、预计时长 |
| RECORDING_STOP | 结束录音 | 文件标识、结束时间、实际时长、文件大小 |
| UPLOAD_START | 开始上传文件 | 文件标识、文件大小、文件类型 |
| UPLOAD_COMPLETE | 完成文件上传 | 文件标识、服务器返回信息 |
| UPLOAD_FAILED | 文件上传失败 | 文件标识、错误信息、重试次数 |
| LOW_BATTERY | 低电量警告 | 当前电量百分比 |
| ERROR | 设备错误 | 错误代码、错误描述 |
| CONFIG_CHANGED | 配置变更 | 变更项、变更值 |



### 6.2 设备状态历史表设计

```sql
CREATE TABLE t_iot_device_status (
    id BIGSERIAL PRIMARY KEY,
    device_id VARCHAR(64) NOT NULL,
    battery_level INT,
    signal_strength INT,
    recording_status INT,
    storage_usage INT,
    error_code INT,
    network_type VARCHAR(16),
    temperature FLOAT,
    device_time BIGINT,
    status_time TIMESTAMP NOT NULL,
    create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted INT NOT NULL DEFAULT 0
);

COMMENT ON TABLE t_iot_device_status IS '设备状态历史表';
COMMENT ON COLUMN t_iot_device_status.id IS '主键ID';
COMMENT ON COLUMN t_iot_device_status.device_id IS '设备唯一标识符';
COMMENT ON COLUMN t_iot_device_status.battery_level IS '电池电量百分比';
COMMENT ON COLUMN t_iot_device_status.signal_strength IS '信号强度(0-100)';
COMMENT ON COLUMN t_iot_device_status.recording_status IS '录音状态(0-待机,1-录音中,2-暂停,3-故障)';
COMMENT ON COLUMN t_iot_device_status.storage_usage IS '存储空间使用百分比';
COMMENT ON COLUMN t_iot_device_status.error_code IS '错误代码(0表示正常)';
COMMENT ON COLUMN t_iot_device_status.network_type IS '网络连接类型';
COMMENT ON COLUMN t_iot_device_status.temperature IS '设备温度(摄氏度)';
COMMENT ON COLUMN t_iot_device_status.device_time IS '设备本机时间戳(毫秒)';
COMMENT ON COLUMN t_iot_device_status.status_time IS '状态记录时间';
COMMENT ON COLUMN t_iot_device_status.create_time IS '创建时间';
COMMENT ON COLUMN t_iot_device_status.is_deleted IS '是否删除(0-未删除,1-已删除)';
```

### 6.3 设备事件表设计

```sql
CREATE TABLE t_iot_device_event (
    id BIGSERIAL PRIMARY KEY,
    device_id VARCHAR(64) NOT NULL,
    event_type VARCHAR(32) NOT NULL,
    event_data JSONB NOT NULL,
    event_time TIMESTAMP NOT NULL,
    device_time BIGINT,
    create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted INT NOT NULL DEFAULT 0
);

COMMENT ON TABLE t_iot_device_event IS '设备事件表';
COMMENT ON COLUMN t_iot_device_event.id IS '主键ID';
COMMENT ON COLUMN t_iot_device_event.device_id IS '设备唯一标识符';
COMMENT ON COLUMN t_iot_device_event.event_type IS '事件类型';
COMMENT ON COLUMN t_iot_device_event.event_data IS '事件数据(JSON格式)';
COMMENT ON COLUMN t_iot_device_event.event_time IS '事件时间';
COMMENT ON COLUMN t_iot_device_event.device_time IS '设备本机时间戳(毫秒)';
COMMENT ON COLUMN t_iot_device_event.create_time IS '创建时间';
COMMENT ON COLUMN t_iot_device_event.is_deleted IS '是否删除(0-未删除,1-已删除)';
```
